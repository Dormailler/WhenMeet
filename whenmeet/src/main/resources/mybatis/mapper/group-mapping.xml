<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="group.GroupDAO">
	<!-- Group select -->
	<!-- 승인된 유저 아이디 -->
	<select id="groupOkUsers" parameterType="int" resultType="String">
		select user_id from applicant_table
		where seq = #{seq} and approval = "승인"
	</select>
	
	<!-- 그룹 방장 정보 -->
	<select id="groupHostInfo" parameterType="String" resultType="userdto">
		select user_id, name, profile_url from user_table
		where user_id = #{host_id}
	</select>
	
	<!-- 그룹 유저 정보 -->
	<select id="groupUserInfo" parameterType="java.util.ArrayList" resultType="userdto">
		select user_id, name, profile_url from user_table where
		<foreach collection="list" item="user" separator=" or ">user_id = #{user}</foreach>
	</select>
	
	<!-- 그룹 아이디 중복체크 -->
	<select id="findGroupID" parameterType="String" resultType="int">
		select count(*) from `group_table`
		where group_id = #{group_id}
	</select>
	
	<!-- 그룹 방장, 부방장 아이디 -->
	<select id="groupWhoHost" parameterType="hashmap" resultType="String">
		select user_id from `group_user_table`
		where group_id = #{group_id}
		<choose>
			<when test="host == 'host' || host == 'sub_host'">
				and ${host} = 1
			</when>
			<otherwise>
				and host = 0 and sub_host = 0
			</otherwise>
		</choose>
	</select>
	
	<!-- 그룹 정보 -->
	<select id="groupInfo" parameterType="String" resultType="groupdto">
		select * from `group_table`
		where group_id = #{group_id}
	</select>
	
	<!-- Group insert -->
	<!-- 그룹 생성 -->
	<insert id="insertGroup" parameterType="groupdto">
		insert into `group_table` (group_id, group_name, group_create_time, group_description, project_end_time)
		values (#{group_id}, #{group_name}, now(), #{group_description}, #{project_end_time})
	</insert>
	<insert id="insertGroupUser" parameterType="groupuserdto">
		insert into `group_user_table` (group_id, user_id, host, sub_host, set_schedule)
		values (#{group_id}, #{user_id}, #{host}, #{sub_host}, 0)
	</insert>
	
	<!-- Group update -->
	<!-- 모집글 완료 처리 -->
	<update id="updateMeetingEnd" parameterType="int">
		update meeting_table
		set end = "완료"
		where seq = #{seq}
	</update>
	
	<!-- 일반 멤버로 변경 -->
	<update id="updateNotHost" parameterType="groupcreatedto">
		update `group_user_table`
		set host = 0, sub_host = 0
		where group_id = #{group_id} and
		(<foreach collection="user_list" item="user" separator=" or ">user_id = #{user}</foreach>)
	</update>
	
	<!-- 방장, 부방장 설정 -->
	<update id="updateHost" parameterType="groupcreatedto">
		update `group_user_table` set
		<choose>
			<when test="host_id == 'host'">
				host = 1
			</when>
			<when test="host_id == 'sub_host'">
				sub_host = 1
			</when>
		</choose>
		where group_id = #{group_id} and
		(<foreach collection="user_list" item="user" separator=" or ">user_id = #{user}</foreach>)
	</update>
	
	<!-- 그룹 정보 수정 -->
	<update id="updateGroupInfo" parameterType="groupdto">
		update `group_table`
		set group_name = #{group_name}, group_description = #{group_description}, project_end_time = #{project_end_time}
		where group_id = #{group_id}
	</update>
	
	<!-- Group delete -->
	<!-- 멤버 탈퇴 -->
	<delete id="deleteMember" parameterType="groupcreatedto">
		delete from `group_user_table`
		where group_id = #{group_id} and
		(<foreach collection="user_list" item="user" separator=" or ">user_id = #{user}</foreach>)
	</delete>
</mapper>